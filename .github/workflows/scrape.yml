name: Scrape (FAST + notify)

on:
  workflow_dispatch:
  schedule:
    - cron: "2-59/20 * * * *"   # every 20 minutes, starting at :02 UTC

permissions:
  contents: write

concurrency:
  group: scrape-arena
  cancel-in-progress: true

env:
  # Defaults you can override in Actions vars/secrets
  #COMP_IDS: "10,11"                 # e.g. "10,11,40,41" or "1-150"
  ROI_THRESHOLD_PCT: "2.0"
  NOTIFY_BOOKIES: "sportsbet,bet365,neds,tab"
  PUBLISH_JSON_PATH: "server/data/opportunities.json"
  SEEN_KEYS_PATH: "server/data/seen_keys.json"
  RAW_JSON_URL: "https://raw.githubusercontent.com/${{ github.repository }}/data/server/data/opportunities.json"
  RAW_SEEN_URL: "https://raw.githubusercontent.com/${{ github.repository }}/data/server/data/seen_keys.json"
  RAW_ACTIVE_URL: "https://raw.githubusercontent.com/${{ github.repository }}/data/server/data/active_comp_ids.json"

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install Chrome + Chromedriver (same model as your working test)
      - id: setup-chrome
        uses: browser-actions/setup-chrome@v2
        with:
          chrome-version: stable
          install-dependencies: true
          install-chromedriver: true

      - name: Export Chrome paths
        run: |
          echo "CHROME_BIN=${{ steps.setup-chrome.outputs.chrome-path }}" >> $GITHUB_ENV
          echo "CHROMEDRIVER_PATH=${{ steps.setup-chrome.outputs.chromedriver-path }}" >> $GITHUB_ENV

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium beautifulsoup4 lxml

      - name: Install Xvfb
        run: sudo apt-get update && sudo apt-get install -y xvfb

      - name: Load active competition IDs
        run: |
          mkdir -p server/data
          if curl -fsSL "$RAW_ACTIVE_URL" -o server/data/active_comp_ids.json; then
            echo "Active comp IDs loaded from data branch."
          else
            echo '{"active_comp_ids":[]}' > server/data/active_comp_ids.json
          fi

          # IMPORTANT: heredoc body is flush-left (no leading spaces), so Python doesn't see indentation
          python - <<'PY' >> $GITHUB_ENV
          import json
          try:
              with open('server/data/active_comp_ids.json','r',encoding='utf-8') as f:
                  d = json.load(f)
              ids = d.get('active_comp_ids', [])
              print('COMP_IDS=' + ','.join(str(x) for x in ids))
          except Exception:
              print('COMP_IDS=')
          PY

          # Fallback if none provided
          grep -E '^COMP_IDS=' $GITHUB_ENV || echo 'COMP_IDS=10,11' >> $GITHUB_ENV
          echo "Using COMP_IDS=$COMP_IDS"

      - name: Test DNS / curl
        run: curl -v http://odds.aussportsbetting.com/multibet

      - name: Run scraper under Xvfb
        env:
          COMP_IDS: ${{ env.COMP_IDS }}
        run: |
          nohup Xvfb :99 -screen 0 1280x1024x24 >/tmp/xvfb.log 2>&1 &
          export DISPLAY=:99
          # Runs the full scraper you built from the test version
          python scraper/scraper.py

      - name: Load previous state (for notifications)
        run: |
          curl -fsSL "$RAW_JSON_URL" -o prev.json || echo '{}' > prev.json
          curl -fsSL "$RAW_SEEN_URL" -o seen_keys.json || echo '[]' > seen_keys.json

      - name: Notify about new arbs (Telegram/Discord)
        env:
          ROI_THRESHOLD_PCT:  ${{ env.ROI_THRESHOLD_PCT }}
          NOTIFY_BOOKIES:     ${{ env.NOTIFY_BOOKIES }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python scripts/notify.py \
            --input "server/data/opportunities.json" \
            --seen "seen_keys.json" \
            --roi-threshold-pct "${ROI_THRESHOLD_PCT}" \
            --notify-bookies "${NOTIFY_BOOKIES}"

      - name: Place seen_keys.json where we commit it from
        run: |
          mkdir -p server/data
          test -f seen_keys.json || echo "[]" > seen_keys.json
          mv -f seen_keys.json server/data/seen_keys.json

      # Optional: publish JSON + seen_keys to data branch (comment out if not needed)
      - name: Publish JSON + seen_keys to data branch
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch origin
          git checkout -B data
          mkdir -p server/data
          git add -f "$PUBLISH_JSON_PATH"
          git add -f "$SEEN_KEYS_PATH"
          git commit -m "test-scrape: data $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No changes"
          git push origin data --force
